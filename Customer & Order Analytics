#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 


#1. How many orders were placed in January? 
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
;


#2. How many of those orders were for an iPhone? 
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone'
;


#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT c.acctnum FROM BIT_DB.customers AS c
RIGHT JOIN BIT_DB.FebSales AS f
ON c.order_id = f.orderID
;


#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, price
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product
ORDER BY price ASC
LIMIT 1
;


#5. What is the total revenue for each product sold in January?
SELECT Product, price * SUM(Quantity) AS revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product
;


#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity), price * SUM(Quantity) AS revenue
FROM BIT_DB.FebSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product
;


#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(c.acctnum), AVG(f.price * f.Quantity) AS avg_spent
FROM BIT_DB.FebSales AS f
LEFT JOIN BIT_DB.customers AS c
ON c.order_id = f.orderID
WHERE f.Quantity > 2
AND length(f.orderID) = 6
AND f.orderID <> 'Order ID'
;


#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(QUantity)
FROM BIT_DB.FebSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND location LIKE '%Los Angeles%'
GROUP BY Product
;
